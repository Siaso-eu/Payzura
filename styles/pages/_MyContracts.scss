.containerWithSidebar {
  @include Flexbox;
  @include FlexFlow(nowrap);

  @include RespondTo(IpadDevices) {
    flex-flow: wrap;
  }

  .filtersMain {
    width: 250px;

    @include RespondTo(IpadDevices) {
      width: 100%;
    }

    .sidebarHeader {
      @include Font(null, 1.2rem, $FontColorDark, null, 400);
      margin: 0;
      border-bottom: 1px solid $BorderDark;
      padding-bottom: 10px;
      @extend %FlexRow-CenterBetween;

      .filterAction {
        display: none;

        @include RespondTo(IpadDevices) {
          display: inline-block;
        }

        svg {
          path {
            fill: $FontColorDark;
          }
        }
      }
    }

    .filtersBody {
      display: block;

      @include RespondTo(IpadDevices) {
        @include Size(100%, calc(100vh - 64px));
        @include Fixed($Left: 0, $Top: 64px);
        background: rgba($WhiteColor, 0.95);
        padding: 5rem;
        z-index: 3;
        overflow: auto;
        display: none;
      }

      @include RespondTo(MobileDevices) {
        height: calc(100vh - 52px);
        top: 52px;
        padding: 2.5rem;
      }

      &.show {
        display: block;
      }

      .filterCloseIc {
        display: none;

        @include RespondTo(IpadDevices) {
          display: inline-block;
          @include Fixed($Right: 20px, $Top: 80px);
        }

        svg {
          path {
            fill: $FontColorDark;
          }
        }
      }

      .filterOption {
        padding-top: 15px;

        .filterTitle {
          @include Font(null, 0.9rem, $FontColorDark, null, 600);
          margin-bottom: 5px;
          background: rgba($BlackColor, 0.05);
          padding: 5px 8px;
          @include BorderRadius(3px);
          @extend %FlexRow-CenterBetween;

          span.priceRight {
            color: rgba($FontColorDark, 0.75);
          }
        }

        .radioGroupMain {
          .radioItem {
            .radioInput {
              + .radioLabel {
                padding: 7px 10px;
              }
            }
          }
        }

        .dropdownContainer {
          height: 140px;
        }
      }

      .filtersAction {
        display: none;

        &.show {
          @include RespondTo(IpadDevices) {
            border-top: 1px solid $LightBlueBg;
            display: block;
            padding-top: 15px;
            margin-top: 15px;
            text-align: right;
          }
        }
      }
    }
  }

  .filtersContainer {
    flex: 2;
    margin-left: 20px;
    overflow: auto;

    @include RespondTo(IpadDevices) {
      flex: unset;
      width: 100%;
      margin-left: 0;
      margin-top: 20px;
    }

    .containerHeader {
      border-bottom: 1px solid $BorderDark;
      padding-bottom: 10px;
      @extend %FlexRow-CenterBetween;

      .totalData {
        flex: 2;
        @include Font(null, 1.2rem, $FontColorDark, null, 400);
      }
    }
  }
}

.darkMode {
  .containerWithSidebar {
    .filtersMain {
      .sidebarHeader {
        color: $FontColorLight;
        border-bottom-color: $BorderLight;

        .filterAction {
          svg {
            path {
              fill: $FontColorLight;
            }
          }
        }
      }

      .filtersBody {
        @include RespondTo(IpadDevices) {
          background: rgba($BlackColor, 0.95);
        }

        .filterCloseIc {
          svg {
            path {
              fill: $FontColorLight;
            }
          }
        }

        .filterOption {
          .filterTitle {
            color: $FontColorLight;
            background: rgba($BlackColor, 0.25);
          }
        }

        .filtersAction {
          &.show {
            @include RespondTo(IpadDevices) {
              border-top-color: $DarkBlueBg;
            }
          }
        }
      }
    }

    .filtersContainer {
      .containerHeader {
        border-bottom-color: $BorderLight;

        .totalData {
          color: $FontColorLight;
        }
      }
    }
  }
}
